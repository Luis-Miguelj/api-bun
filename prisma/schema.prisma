// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  email    String     @unique
  username String     @unique
  password String
  Token    Token[]
  Postagem Postagem[]
  Tasks    Tasks[]
  Conversa Conversa[]
}

model Token {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model Postagem {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  created     DateTime
  authorId    String   @db.ObjectId
  author      User     @relation(fields: [authorId], references: [id])
}

model Tasks {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  created     DateTime
  authorId    String   @db.ObjectId
  author      User     @relation(fields: [authorId], references: [id])
}

model Chat {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  conversa String[]
  Conversa Conversa[]
}

model Conversa {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  chatId  String @db.ObjectId
  chat    Chat   @relation(fields: [chatId], references: [id])
  userId  String @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
  message String
}
